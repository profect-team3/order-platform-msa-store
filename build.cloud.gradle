plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}


group = 'goorm.delivery'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Spring Boot 기본
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-aop"      // @PreAuthorize 등 AOP 사용 시 유용

    // Persistence / DB
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-batch"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
        // DB
    runtimeOnly   "org.postgresql:postgresql"

    // Security / OAuth2
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation files('libs/msa-common-util-1.0.1-plain.jar')

    // Swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"

    // QueryDSL (Jakarta)
    implementation       "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    annotationProcessor  "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor  "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor  "jakarta.persistence:jakarta.persistence-api"

    // Lombok
    compileOnly         "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // Retry
    implementation "org.springframework.retry:spring-retry"

    // Test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.springframework.batch:spring-batch-test"
    testImplementation "com.h2database:h2"
    //Health Check
    implementation "org.springframework.boot:spring-boot-starter-actuator"
}
clean {
    delete file('src/main/generated')
}


tasks.named('test') {
    useJUnitPlatform()
}
