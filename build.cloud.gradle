plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'goorm.delivery'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    querydslVersion = '5.0.0'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


dependencies {
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:2025.0.0-SNAPSHOT")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
//    implementation project(':entity-repository')
    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'
    //Query DSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation files('libs/msa-common-security-1.0.8-plain.jar')
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    testImplementation 'org.springframework.security:spring-security-test'

    // 헬스체크 등
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    // (선택) 메서드 보안 @PreAuthorize 쓰면 안정적으로 AOP 포함 추천
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation 'org.springframework.retry:spring-retry'
}

clean {
    delete file('src/main/generated')
}


tasks.named('test') {
    useJUnitPlatform()
}
